buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.5.RELEASE")
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.9"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'application'
    id 'net.ltgt.apt' version "0.21"
    id "org.springframework.boot" version "2.2.5.RELEASE"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "io.freefair.aspectj.post-compile-weaving" version "5.1.0"
    id "io.freefair.lombok" version "5.1.0"
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

group 'com.bordozer'
version '1.00'
archivesBaseName = 'search-engine'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
    hibernateVersion = '5.4.1.Final'
    aspectjVersion = '1.9.5'
    spotbugsVersion = '3.1.8'
    mockitoVersion = '3.3.0'
}

dependencies {
    compile group: 'com.bordozer', name: 'commons', version: '3.33'
    compile group: 'com.bordozer', name: 'measury', version: '2.25'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

    compile group: 'com.github.spotbugs', name: 'spotbugs', version: spotbugsVersion
    compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: spotbugsVersion
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compileOnly group: 'net.jcip', name: 'jcip-annotations', version: '1.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '2.3.3'

    compile group: 'org.aspectj', name: 'aspectjrt', version: aspectjVersion
    compile group: 'org.aspectj', name: 'aspectjweaver', version: aspectjVersion

    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: hibernateVersion

    compile group: 'org.immutables', name: 'value', version: '2.8.8'
    annotationProcessor "org.immutables:value:2.8.8"

    compile group: 'org.hsqldb', name: 'hsqldb', version: '2.5.0'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '6.1.0'
    compile group: 'net.bytebuddy', name: 'byte-buddy', version: '1.9.10'

    compile group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'ch.qos.logback:logback-core:1.2.3'

    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compileOnly group: 'net.jcip', name: 'jcip-annotations', version: '1.0'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    testImplementation("org.junit.jupiter:junit-jupiter:5.6.0")

    testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoVersion

    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'

    testCompile group: 'org.dbunit', name: 'dbunit', version: '2.6.0'
    testCompile group: 'com.github.springtestdbunit', name: 'spring-test-dbunit', version: '1.3.0'

    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.2.0'
}

test {
    useJUnitPlatform()
    systemProperties System.properties
    testLogging {
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

aspectj {
    version = '1.9.5'
}

/* <CHECKSTYLE> */
apply plugin: 'checkstyle'

checkstyle {
    ignoreFailures = false
    configFile = file("${buildDir}/resources/main/sca/checkstyle/checkstyle.xml")
    configProperties = ["suppressionFile": file("${buildDir}/resources/main/sca/checkstyle/checkstyle-exclude.xml")]
    maxWarnings = 0
    showViolations = true
    toolVersion = "8.16"
}

tasks.withType(Checkstyle) { task ->
    reports {
        html.enabled = true
        xml.enabled = false
    }
    enabled = false
}
/* </CHECKSTYLE> */

/* <PMD> */
apply plugin: "pmd"

pmd {
    ignoreFailures = false
    pmdTest.enabled = false
    ruleSetFiles = files("${buildDir}/resources/main/sca/pmd/pmd-ruleset.xml")
    ruleSets = []
    consoleOutput = true
    toolVersion = "6.10.0"
}

tasks.withType(Pmd) { task ->
    reports {
        html.enabled = true
        xml.enabled = false
    }
    enabled = false
}
/* </PMD> */

/* <SPOTBUGS> */
/*apply plugin: com.github.spotbugs.SpotBugsPlugin

spotbugs  {
    toolVersion = '3.1.8'
    ignoreFailures = false
    spotbugsTest.enabled = false
    effort 'max'
    reportLevel = "low"
    excludeFilter = file("${buildDir}/resources/main/sca/spotbugs/excludeFilter.xml")
}

tasks.withType(com.github.spotbugs.SpotBugsTask) { task ->
    reports {
        xml.enabled = false
        html.enabled = true
    }
    enabled = false
}*/
/* </SPOTBUGS> */

ext {
    scaSource = 'src/main/java/com/bordozer/searchengine'
}
checkstyleMain {
    source = scaSource
}
pmdMain {
    source = scaSource
}
tasks.withType(Checkstyle) { task -> enabled = true }
tasks.withType(Pmd) { task -> enabled = true }
//spotbugsMain.enabled = true

sourceSets {
    main {
        java.srcDir "${buildDir}/generated/source/apt/main"
    }
}

compileJava.dependsOn clean

